@functions
{
    MvcHtmlString NavigationItemByUrl(string text, string path, bool selected = false, bool anonymous = true)
    {
        if (!anonymous && !selected)
        {
            if (ViewBag.User == null)
            {
                return null;
            }
        }

        var @class = " class=\"item" + (selected ? " selected" : "") + "\"";
        var href = " href=\"" + path + "\"";

        return new MvcHtmlString("<a " + @class + href + "><span class=\"content\">" + text + "</span></a>");
    }
    MvcHtmlString NavigationItem(string text, string controller, bool anonymous = true, string action = "Index")
    {
        object attributes = null;
        
        string selectedItem = ViewBag.NavigationItem??ViewContext.RouteData.Values["controller"];

        bool selected = selectedItem.Equals(controller, StringComparison.InvariantCultureIgnoreCase);

        var path = Url.Action(action, controller);

      return NavigationItemByUrl(text, path, selected, anonymous);
    }
    MvcHtmlString NavigationItem(string text, bool anonymous = true)
    {
        return NavigationItem(text, text.Replace(" ", ""), anonymous);
    }
}@*
*@<nav id="navigationMenu" class="sideMenu">@*
    *@@NavigationItem("Home")@*
    @NavigationItem("Control Panels", "ControlPanel", false)@*
    *@@NavigationItem("Networks", "Network", false)@*
    *@@NavigationItem("Devices", "Device", false)@*
    *@@NavigationItem("Computers", "Computer", false)@*
    @NavigationItem("Scripts", "Script", false)@*
    *@@NavigationItem("Task Queue", "Task", false)@*
    *@@NavigationItem("Help")@*
    *@@NavigationItem("Account", "User", false, "Edit")@*
    
    *@<div class="divider"></div>@*
    *@@if (ViewBag.User == null)
      {
          @NavigationItem("Sign In", "User", true, "SignIn")
      }
      else
      {
          @NavigationItem("Sign Out", "User", true, "SignOut")
      }@*
*@</nav>