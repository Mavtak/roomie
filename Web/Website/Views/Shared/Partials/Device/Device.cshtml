@using Roomie.Common.HomeAutomation
@using Roomie.Common.HomeAutomation.BinarySensors
@using Roomie.Common.HomeAutomation.MultilevelSensors
@model DeviceViewModel
@{
    var widgetData = Model.WidgetData;
    var device = Model.Device;
    //TODO: make time zone a user setting
    var timeZone = TimeZoneInfo.FromSerializedString("Eastern Standard Time;-300;(UTC-05:00) Eastern Time (US & Canada);Eastern Standard Time;Eastern Daylight Time;[01:01:0001;12:31:2006;60;[0;02:00:00;4;1;0;];[0;02:00:00;10;5;0;];][01:01:2007;12:31:9999;60;[0;02:00:00;3;2;0;];[0;02:00:00;11;1;0;];];");
}@*

*@@helper WriteDetail(DeviceModel device, string label, string value, string pollAction)
{@*
      *@using (Ajax.BeginRouteForm("DefaultApi", new
            {
                id = device.Id,
                action = pollAction,
                httproute = true
            }, null, new
            {
                @class = "group"
            })) {@*
                *@<button>@label: @value</button>@*            
          *@}@*
*@}@*

*@@Html.Partial("Partials/WidgetStart", widgetData)@*
      
    *@@if (Model.DisplayButtons)
    {
        if (device.CurrentAction != null)
        {
            <div class="group"><span>@device.CurrentAction</span></div>
        }

        if (device.PowerSensor.Value != null)
        {
            @WriteDetail(device, "Power", device.PowerSensor.Describe(timeZone), "PollPowerSensor")
        }

        if (device.TemperatureSensor.Value != null && !device.Type.Equals(DeviceType.Thermostat))
        {
            @WriteDetail(device, "Temperature", device.TemperatureSensor.Describe(timeZone), "PollTemperatureSensor")
        }
        
        if (device.HumiditySensor.Value != null)
        {
            @WriteDetail(device, "Humidity", @device.HumiditySensor.Describe(timeZone), "PollHumiditySensor")
        }
        
        if (device.IlluminanceSensor.Value != null)
        {
            @WriteDetail(device, "Illuminance", device.IlluminanceSensor.Describe(timeZone), "PollIlluminanceSensor")
        }
          
        if (device.Type.Equals(DeviceType.Thermostat))
        {
            @Html.Partial("Partials/Device/ThermostatControls", Model);
        }
        else if (device.Type.Equals(DeviceType.MultilevelSwitch))
        {
            @Html.Partial("Partials/Device/DimmerButtons", Model)
        }
        else if(device.Type.Equals(DeviceType.BinarySwitch))
        {
            @Html.Partial("Partials/Device/ToggleButtons", Model.Device)
        }
        else if (device.Type.Equals(DeviceType.BinarySensor) || device.BinarySensor.Value != null)
        {
            @WriteDetail(device, "Binary State", @device.BinarySensor.Describe(timeZone), "PollBinarySensor")
        }

        if (device.ColorSwitch.Value != null)
        {
            @Html.Partial("Partials/Device/ColorSwitchButtons", Model)
        }
    }@*

    *@@if (Model.DisplayEditor)
    {
          @Html.Partial("Partials/Device/Editor", Model.Device)
    }@*

*@@Html.Partial("Partials/WidgetEnd", widgetData)@*

*@