//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Roomie.CommandDefinitions.WeMoCommands.Sklose {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="Sklose.BasicServicePortType")]
    public interface BasicServicePortType {
        
        // CODEGEN: Generating message contract since the operation SetBinaryState is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#SetBinaryState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateResponse1 SetBinaryState(Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#SetBinaryState", ReplyAction="*")]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateResponse1> SetBinaryStateAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateRequest request);
        
        // CODEGEN: Generating message contract since the operation GetBinaryState is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetBinaryState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateResponse1 GetBinaryState(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetBinaryState", ReplyAction="*")]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateResponse1> GetBinaryStateAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateRequest request);
        
        // CODEGEN: Generating message contract since the operation GetFriendlyName is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetFriendlyName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameResponse1 GetFriendlyName(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetFriendlyName", ReplyAction="*")]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameResponse1> GetFriendlyNameAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameRequest request);
        
        // CODEGEN: Generating message contract since the operation GetHomeId is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetHomeId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdResponse1 GetHomeId(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetHomeId", ReplyAction="*")]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdResponse1> GetHomeIdAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdRequest request);
        
        // CODEGEN: Generating message contract since the operation GetSignalStrength is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetSignalStrength", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthResponse1 GetSignalStrength(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetSignalStrength", ReplyAction="*")]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthResponse1> GetSignalStrengthAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthRequest request);
        
        // CODEGEN: Generating message contract since the operation GetLogFileURL is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetLogFileURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLResponse1 GetLogFileURL(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetLogFileURL", ReplyAction="*")]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLResponse1> GetLogFileURLAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLRequest request);
        
        // CODEGEN: Generating message contract since the operation GetIconURL is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetIconURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLResponse1 GetIconURL(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#GetIconURL", ReplyAction="*")]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLResponse1> GetIconURLAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLRequest request);
        
        // CODEGEN: Generating message contract since the operation ChangeFriendlyName is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#ChangeFriendlyName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameResponse1 ChangeFriendlyName(Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Belkin:service:basicevent:1#ChangeFriendlyName", ReplyAction="*")]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameResponse1> ChangeFriendlyNameAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class SetBinaryState : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string binaryStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BinaryState {
            get {
                return this.binaryStateField;
            }
            set {
                this.binaryStateField = value;
                this.RaisePropertyChanged("BinaryState");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class SetBinaryStateResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string binaryStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BinaryState {
            get {
                return this.binaryStateField;
            }
            set {
                this.binaryStateField = value;
                this.RaisePropertyChanged("BinaryState");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetBinaryStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryState SetBinaryState;
        
        public SetBinaryStateRequest() {
        }
        
        public SetBinaryStateRequest(Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryState SetBinaryState) {
            this.SetBinaryState = SetBinaryState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetBinaryStateResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateResponse SetBinaryStateResponse;
        
        public SetBinaryStateResponse1() {
        }
        
        public SetBinaryStateResponse1(Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateResponse SetBinaryStateResponse) {
            this.SetBinaryStateResponse = SetBinaryStateResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetBinaryState : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetBinaryStateResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string binaryStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BinaryState {
            get {
                return this.binaryStateField;
            }
            set {
                this.binaryStateField = value;
                this.RaisePropertyChanged("BinaryState");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetBinaryStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryState GetBinaryState;
        
        public GetBinaryStateRequest() {
        }
        
        public GetBinaryStateRequest(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryState GetBinaryState) {
            this.GetBinaryState = GetBinaryState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetBinaryStateResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateResponse GetBinaryStateResponse;
        
        public GetBinaryStateResponse1() {
        }
        
        public GetBinaryStateResponse1(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateResponse GetBinaryStateResponse) {
            this.GetBinaryStateResponse = GetBinaryStateResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetFriendlyName : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetFriendlyNameResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string friendlyNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
                this.RaisePropertyChanged("FriendlyName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFriendlyNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyName GetFriendlyName;
        
        public GetFriendlyNameRequest() {
        }
        
        public GetFriendlyNameRequest(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyName GetFriendlyName) {
            this.GetFriendlyName = GetFriendlyName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFriendlyNameResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameResponse GetFriendlyNameResponse;
        
        public GetFriendlyNameResponse1() {
        }
        
        public GetFriendlyNameResponse1(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameResponse GetFriendlyNameResponse) {
            this.GetFriendlyNameResponse = GetFriendlyNameResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetHomeId : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetHomeIdResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string homeIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string HomeId {
            get {
                return this.homeIdField;
            }
            set {
                this.homeIdField = value;
                this.RaisePropertyChanged("HomeId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHomeIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeId GetHomeId;
        
        public GetHomeIdRequest() {
        }
        
        public GetHomeIdRequest(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeId GetHomeId) {
            this.GetHomeId = GetHomeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHomeIdResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdResponse GetHomeIdResponse;
        
        public GetHomeIdResponse1() {
        }
        
        public GetHomeIdResponse1(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdResponse GetHomeIdResponse) {
            this.GetHomeIdResponse = GetHomeIdResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetSignalStrength : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetSignalStrengthResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string signalStrengthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SignalStrength {
            get {
                return this.signalStrengthField;
            }
            set {
                this.signalStrengthField = value;
                this.RaisePropertyChanged("SignalStrength");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSignalStrengthRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrength GetSignalStrength;
        
        public GetSignalStrengthRequest() {
        }
        
        public GetSignalStrengthRequest(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrength GetSignalStrength) {
            this.GetSignalStrength = GetSignalStrength;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSignalStrengthResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthResponse GetSignalStrengthResponse;
        
        public GetSignalStrengthResponse1() {
        }
        
        public GetSignalStrengthResponse1(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthResponse GetSignalStrengthResponse) {
            this.GetSignalStrengthResponse = GetSignalStrengthResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetLogFileURL : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetLogFileURLResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string lOGURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LOGURL {
            get {
                return this.lOGURLField;
            }
            set {
                this.lOGURLField = value;
                this.RaisePropertyChanged("LOGURL");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLogFileURLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURL GetLogFileURL;
        
        public GetLogFileURLRequest() {
        }
        
        public GetLogFileURLRequest(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURL GetLogFileURL) {
            this.GetLogFileURL = GetLogFileURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLogFileURLResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLResponse GetLogFileURLResponse;
        
        public GetLogFileURLResponse1() {
        }
        
        public GetLogFileURLResponse1(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLResponse GetLogFileURLResponse) {
            this.GetLogFileURLResponse = GetLogFileURLResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetIconURL : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class GetIconURLResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uRLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
                this.RaisePropertyChanged("URL");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetIconURLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURL GetIconURL;
        
        public GetIconURLRequest() {
        }
        
        public GetIconURLRequest(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURL GetIconURL) {
            this.GetIconURL = GetIconURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetIconURLResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLResponse GetIconURLResponse;
        
        public GetIconURLResponse1() {
        }
        
        public GetIconURLResponse1(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLResponse GetIconURLResponse) {
            this.GetIconURLResponse = GetIconURLResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class ChangeFriendlyName : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string friendlyNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
                this.RaisePropertyChanged("FriendlyName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Belkin:service:basicevent:1")]
    public partial class ChangeFriendlyNameResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeFriendlyNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyName ChangeFriendlyName;
        
        public ChangeFriendlyNameRequest() {
        }
        
        public ChangeFriendlyNameRequest(Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyName ChangeFriendlyName) {
            this.ChangeFriendlyName = ChangeFriendlyName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeFriendlyNameResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Belkin:service:basicevent:1", Order=0)]
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameResponse ChangeFriendlyNameResponse;
        
        public ChangeFriendlyNameResponse1() {
        }
        
        public ChangeFriendlyNameResponse1(Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameResponse ChangeFriendlyNameResponse) {
            this.ChangeFriendlyNameResponse = ChangeFriendlyNameResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BasicServicePortTypeChannel : Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasicServicePortTypeClient : System.ServiceModel.ClientBase<Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType>, Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType {
        
        public BasicServicePortTypeClient() {
        }
        
        public BasicServicePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BasicServicePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasicServicePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasicServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateResponse1 Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.SetBinaryState(Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateRequest request) {
            return base.Channel.SetBinaryState(request);
        }
        
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateResponse SetBinaryState(Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryState SetBinaryState1) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateRequest();
            inValue.SetBinaryState = SetBinaryState1;
            Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateResponse1 retVal = ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).SetBinaryState(inValue);
            return retVal.SetBinaryStateResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateResponse1> Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.SetBinaryStateAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateRequest request) {
            return base.Channel.SetBinaryStateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateResponse1> SetBinaryStateAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryState SetBinaryState) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.SetBinaryStateRequest();
            inValue.SetBinaryState = SetBinaryState;
            return ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).SetBinaryStateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateResponse1 Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetBinaryState(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateRequest request) {
            return base.Channel.GetBinaryState(request);
        }
        
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateResponse GetBinaryState(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryState GetBinaryState1) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateRequest();
            inValue.GetBinaryState = GetBinaryState1;
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateResponse1 retVal = ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetBinaryState(inValue);
            return retVal.GetBinaryStateResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateResponse1> Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetBinaryStateAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateRequest request) {
            return base.Channel.GetBinaryStateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateResponse1> GetBinaryStateAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryState GetBinaryState) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetBinaryStateRequest();
            inValue.GetBinaryState = GetBinaryState;
            return ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetBinaryStateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameResponse1 Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetFriendlyName(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameRequest request) {
            return base.Channel.GetFriendlyName(request);
        }
        
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameResponse GetFriendlyName(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyName GetFriendlyName1) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameRequest();
            inValue.GetFriendlyName = GetFriendlyName1;
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameResponse1 retVal = ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetFriendlyName(inValue);
            return retVal.GetFriendlyNameResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameResponse1> Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetFriendlyNameAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameRequest request) {
            return base.Channel.GetFriendlyNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameResponse1> GetFriendlyNameAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyName GetFriendlyName) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetFriendlyNameRequest();
            inValue.GetFriendlyName = GetFriendlyName;
            return ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetFriendlyNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdResponse1 Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetHomeId(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdRequest request) {
            return base.Channel.GetHomeId(request);
        }
        
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdResponse GetHomeId(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeId GetHomeId1) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdRequest();
            inValue.GetHomeId = GetHomeId1;
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdResponse1 retVal = ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetHomeId(inValue);
            return retVal.GetHomeIdResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdResponse1> Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetHomeIdAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdRequest request) {
            return base.Channel.GetHomeIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdResponse1> GetHomeIdAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeId GetHomeId) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetHomeIdRequest();
            inValue.GetHomeId = GetHomeId;
            return ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetHomeIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthResponse1 Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetSignalStrength(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthRequest request) {
            return base.Channel.GetSignalStrength(request);
        }
        
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthResponse GetSignalStrength(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrength GetSignalStrength1) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthRequest();
            inValue.GetSignalStrength = GetSignalStrength1;
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthResponse1 retVal = ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetSignalStrength(inValue);
            return retVal.GetSignalStrengthResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthResponse1> Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetSignalStrengthAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthRequest request) {
            return base.Channel.GetSignalStrengthAsync(request);
        }
        
        public System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthResponse1> GetSignalStrengthAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrength GetSignalStrength) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetSignalStrengthRequest();
            inValue.GetSignalStrength = GetSignalStrength;
            return ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetSignalStrengthAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLResponse1 Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetLogFileURL(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLRequest request) {
            return base.Channel.GetLogFileURL(request);
        }
        
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLResponse GetLogFileURL(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURL GetLogFileURL1) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLRequest();
            inValue.GetLogFileURL = GetLogFileURL1;
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLResponse1 retVal = ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetLogFileURL(inValue);
            return retVal.GetLogFileURLResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLResponse1> Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetLogFileURLAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLRequest request) {
            return base.Channel.GetLogFileURLAsync(request);
        }
        
        public System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLResponse1> GetLogFileURLAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURL GetLogFileURL) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetLogFileURLRequest();
            inValue.GetLogFileURL = GetLogFileURL;
            return ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetLogFileURLAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLResponse1 Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetIconURL(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLRequest request) {
            return base.Channel.GetIconURL(request);
        }
        
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLResponse GetIconURL(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURL GetIconURL1) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLRequest();
            inValue.GetIconURL = GetIconURL1;
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLResponse1 retVal = ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetIconURL(inValue);
            return retVal.GetIconURLResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLResponse1> Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.GetIconURLAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLRequest request) {
            return base.Channel.GetIconURLAsync(request);
        }
        
        public System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLResponse1> GetIconURLAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURL GetIconURL) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.GetIconURLRequest();
            inValue.GetIconURL = GetIconURL;
            return ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).GetIconURLAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameResponse1 Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.ChangeFriendlyName(Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameRequest request) {
            return base.Channel.ChangeFriendlyName(request);
        }
        
        public Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameResponse ChangeFriendlyName(Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyName ChangeFriendlyName1) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameRequest();
            inValue.ChangeFriendlyName = ChangeFriendlyName1;
            Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameResponse1 retVal = ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).ChangeFriendlyName(inValue);
            return retVal.ChangeFriendlyNameResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameResponse1> Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType.ChangeFriendlyNameAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameRequest request) {
            return base.Channel.ChangeFriendlyNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameResponse1> ChangeFriendlyNameAsync(Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyName ChangeFriendlyName) {
            Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameRequest inValue = new Roomie.CommandDefinitions.WeMoCommands.Sklose.ChangeFriendlyNameRequest();
            inValue.ChangeFriendlyName = ChangeFriendlyName;
            return ((Roomie.CommandDefinitions.WeMoCommands.Sklose.BasicServicePortType)(this)).ChangeFriendlyNameAsync(inValue);
        }
    }
}
